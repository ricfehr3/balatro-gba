name: Deploy Nightly

on:
  schedule:
    - cron: '0 2 * * *' # run at 2 AM UTC
  workflow_dispatch:

jobs:
  build-job:
    uses: ./.github/workflows/build_ci_workflow.yml

  nightly:
    name: Deploy nightly
    strategy:
      fail-fast: false
    runs-on: ubuntu-latest
    needs: build-job
    steps:
      - name: Download the build output
        uses: actions/download-artifact@v5
        with:
          name: build-out
          path: build

      - name: Package Release
        run: zip release.zip build/balatro-gba.gba
 
      - name: Deploy release
        uses: WebFreak001/deploy-nightly@v3.2.0
        with:
          upload_url: https://uploads.github.com/repos/ricfehr3/balatro-gba/releases/257345890/assets{?name,label} # find out this value by opening https://api.github.com/repos/<owner>/<repo>/releases in your browser and copy the full "upload_url" value including the {?name,label} part
          release_id: 257345890 # same as above (id can just be taken out the upload_url, it's used to find old releases)
          asset_path: ./release.zip # path to archive to upload
          asset_name: release-$$-test.zip # name to upload the release as, use $$ to insert date (YYYYMMDD) and 6 letter commit hash
          asset_content_type: application/zip # required by GitHub API
          max_releases: 7 # optional, if there are more releases than this matching the asset_name, the oldest ones are going to be deleted
          ignore_hash: true # optional, if there is already a release associated with the repo's current commit, should we go ahead and upload the asset anyway.
